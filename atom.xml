<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hub</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-01-05T18:20:58.488Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Breght Van Baelen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Reporting in R</title>
    <link href="http://yoursite.com/2017/01/05/ReportingInR/"/>
    <id>http://yoursite.com/2017/01/05/ReportingInR/</id>
    <published>2017-01-05T00:19:36.836Z</published>
    <updated>2017-01-05T18:20:58.488Z</updated>
    
    <content type="html"><![CDATA[<p>Reporting your R-script can be done <em>in a matter of seconds</em> by using knitr or R Markdown. These libraries were created to quickly show your <strong>R-code</strong> as well as <strong>results</strong> in a <em>wide variety of document types</em>. Knitr can be used to automatically create a report of an existing R-script. R Markdown uses knitr in combination with <strong>markdown</strong> to create more customised reports. </p>
<p><img src="http://rmarkdown.rstudio.com/images/RMarkdownOutputFormats.png" alt="R-Reporting"></p>
<a id="more"></a>
<h2 id="Knitr"><a href="#Knitr" class="headerlink" title="Knitr"></a>Knitr</h2><hr>
<p>Knitr is ideal to create a report for your <strong>colleagues / insiders</strong>. It provides the function <code>stitch()</code>, which creates a $\LaTeX$ ( default ) or HTML report of an <strong>existing</strong> R-script. Apart from the code and results, it also shows the <strong>R session information</strong>. For more details about this package, refer to the <a href="https://yihui.name/knitr/" target="_blank" rel="external">homepage</a> of knitr.</p>
<h3 id="Set-up"><a href="#Set-up" class="headerlink" title="Set-up"></a>Set-up</h3><p>Assume we have an R-script called <em>script.R</em> containing just two lines of code.</p>
<pre><code>library(dplyr)
glimpse(mtcars)
</code></pre><p>The last line will <em>glimpse</em> at dataset <code>mtcars</code> by showing the number of observations, the number of variables and their first values. Further, make sure <em>knitr</em> is installed by running the following command.</p>
<pre><code>install.packages(&apos;knitr&apos;)
</code></pre><h3 id="Execution"><a href="#Execution" class="headerlink" title="Execution"></a>Execution</h3><p>To quickly generate a report of <em>script.R</em>, simply run the following command.</p>
<pre><code>knitr::stitch(&apos;script.R&apos;)
</code></pre><p>The command generated 2 documents in the working directory, namely a $\LaTeX$ file <em>script.tex</em> and a PDF file <em>script.pdf</em>. The <a href="/content/ReportingInR/script.pdf">PDF-file</a> shows the code, results, R session information and time of execution.</p>
<h2 id="R-Markdown"><a href="#R-Markdown" class="headerlink" title="R Markdown"></a>R Markdown</h2><hr>
<p>R Markdown is ideal to create a report for your <strong>clients / outsiders</strong>. It creates a report by writing a <strong>markdown document</strong> embedded with <strong>R code</strong> and its <strong>results</strong>. The document can then be converted to HTML, $\LaTeX$, PDF, Word or even a slideshow. If you are not familiar with markdown, refer to the <a href="/2016/12/29/markdown/" title="Markdown">Markdown</a> article. For more information about R Markdown, refer to the <a href="https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf" target="_blank" rel="external">cheat sheet</a>.</p>
<p>In this section, we are going to create an R Markdown document which includes some libraries, glimpses at the dataset <code>mtcars</code> and displays interactive plots. </p>
<div class="video-container"><iframe src="//player.vimeo.com/video/178485416" frameborder="0" allowfullscreen></iframe></div>
<h3 id="Set-up-1"><a href="#Set-up-1" class="headerlink" title="Set-up"></a>Set-up</h3><p>To create R Markdown documents, I highly recommend using <a href="https://www.rstudio.com/" target="_blank" rel="external">RStudio</a>. From RStudio, create a new R Markdown document by clicking <em>File &gt; New File &gt; R Markdown</em>. Specifying the title and author and selecting the desired output format creates an initial YAML-header. The title of this document is set to <em>“Hello world”</em> and the author to <em>“Breght Van Baelen”</em>. Save the document as <em>report.Rmd</em>.</p>
<p><img src="/content/ReportingInR/RStudio_RMarkdown.png" alt="RStudio-RMarkdown"></p>
<p>Markdown can be written below the YALM-header and R code can be embedded inline by <code>`r some r-code ` </code> or by a code chunk starting with <code>```{r}</code> and ending with <code>``` </code>.</p>
<h4 id="Adding-libraries"><a href="#Adding-libraries" class="headerlink" title="Adding libraries"></a>Adding libraries</h4><p>Add the following text below the YAML-header. What each library is used for will be explained later. Make sure the libraries were downloaded first by using <code>install.packages(&#39;the_package&#39;)</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">## Libraries</div><div class="line">The libraries used for the R-script.</div><div class="line">```&#123;r&#125;</div><div class="line">library(knitr)</div><div class="line">library(dplyr)</div><div class="line">library(shiny)</div><div class="line">```</div></pre></td></tr></table></figure>
<h4 id="Glimpse-mtcars"><a href="#Glimpse-mtcars" class="headerlink" title="Glimpse mtcars"></a>Glimpse mtcars</h4><p>Add the following text to include a glimpse of dataset <code>mtcars</code> to the report. The function <code>kable()</code> produces a markdown output of the table which is then converted to the specified output document.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">## Glimpse</div><div class="line">To glimpse at the dataset `mtcars`, execute the following code.</div><div class="line">```&#123;r&#125;</div><div class="line">kable(glimpse(mtcars))</div><div class="line">```</div></pre></td></tr></table></figure>
<h4 id="Plot-datasets"><a href="#Plot-datasets" class="headerlink" title="Plot datasets"></a>Plot datasets</h4><p>Add <code>runtime:  shiny</code> to the YAML-header and the following text to include an interactive plotter to the report. A combobox will be displayed with the option to plot the <code>mtcars</code> or <code>co2</code> dataset. This will only work when converting to a presentation or a HTML-document and when <em>shiny</em> is running on your localhost. This will be left out when rendering the report. The option <code>echo=FALSE</code> only shows the result and hides the code.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">## Plot</div><div class="line">Plotting the selected dataset gives us the following picture.</div><div class="line">```&#123;r echo=FALSE&#125;</div><div class="line">selectInput(&quot;data&quot;,&quot;&quot;,c(&quot;mtcars&quot;,&quot;co2&quot;))</div><div class="line">renderPlot(&#123;</div><div class="line">  d &lt;- get(input$data)</div><div class="line">  plot(d)</div><div class="line">&#125;)</div><div class="line">```</div></pre></td></tr></table></figure>
<h3 id="Execution-1"><a href="#Execution-1" class="headerlink" title="Execution"></a>Execution</h3><p>The desired output format is specified in the YAML-header. To render <a href="/content/ReportingInR/report.Rmd">report.Rmd</a>, simply press <kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>k</kbd> or use the command <code>rmarkdown::render(&quot;report.Rmd&quot;)</code>. </p>
<table>
<thead>
<tr>
<th>Output format</th>
<th>Output             </th>
</tr>
</thead>
<tbody>
<tr>
<td>html_document</td>
<td><a href="/content/ReportingInR/R_Report_HTML_Document.html">html file (webpage)</a>    </td>
</tr>
<tr>
<td>pdf_document</td>
<td><a href="/content/ReportingInR/R_Report_PDF_Document.pdf">pdf document</a>            </td>
</tr>
<tr>
<td>word_document</td>
<td><a href="/content/ReportingInR/R_Report_Word_Document.docx">Microsoft Word .docx</a>    </td>
</tr>
<tr>
<td>beamer_presentation</td>
<td><a href="/content/ReportingInR/R_Report_Beamer_Presentation.pdf">beamer slideshow (pdf)</a></td>
</tr>
<tr>
<td>ioslides_presentation</td>
<td><a href="/content/ReportingInR/R_Report_Ioslides_Presentation.html">ioslides slideshow (html)</a></td>
</tr>
</tbody>
</table>
<p>Use the following output format to also keep the $\LaTeX$ document when converting to PDF.</p>
<pre><code>output: 
  pdf_document: 
    keep_tex: true
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Reporting your R-script can be done &lt;em&gt;in a matter of seconds&lt;/em&gt; by using knitr or R Markdown. These libraries were created to quickly show your &lt;strong&gt;R-code&lt;/strong&gt; as well as &lt;strong&gt;results&lt;/strong&gt; in a &lt;em&gt;wide variety of document types&lt;/em&gt;. Knitr can be used to automatically create a report of an existing R-script. R Markdown uses knitr in combination with &lt;strong&gt;markdown&lt;/strong&gt; to create more customised reports. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://rmarkdown.rstudio.com/images/RMarkdownOutputFormats.png&quot; alt=&quot;R-Reporting&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
      <category term="R" scheme="http://yoursite.com/tags/R/"/>
    
      <category term="knitr" scheme="http://yoursite.com/tags/knitr/"/>
    
      <category term="reporting" scheme="http://yoursite.com/tags/reporting/"/>
    
  </entry>
  
  <entry>
    <title>Markdown</title>
    <link href="http://yoursite.com/2016/12/29/markdown/"/>
    <id>http://yoursite.com/2016/12/29/markdown/</id>
    <published>2016-12-29T10:44:05.021Z</published>
    <updated>2016-12-30T10:04:00.710Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown is <em>mostly</em>  used as a <strong>text-to-HTML conversion tool</strong> for web writers. After writing using <strong>plain text format</strong>, your markdown document can be converted to structurally valid XHTML (or HTML). For instance, github uses markdown to preview read me’s. Also the posts on this blog are written in markdown.</p>
<a id="more"></a>
<p>Markdown can not only be converted to HTML. For instance, RStudio uses R Markdown ( a combination of markdown and R code chunks ) to publish a report about your R code to Word, PDF, $\LaTeX$ or even a presentation.</p>
<p>The strength of markdown is that a Markdown-formatted document is <strong>publishable as-is</strong>, as plain text, without looking like it’s been marked up with tags or formatting instructions. To see this, we’re going over the markdown syntax in the next section.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><hr>
<p>This section covers the basic syntax of markdown. For more details on the syntax redirect to <a href="https://daringfireball.net/projects/markdown/syntax" target="_blank" rel="external">daring fireball</a>.</p>
<h3 id="Block-Elements"><a href="#Block-Elements" class="headerlink" title="Block Elements"></a>Block Elements</h3><hr>
<h4 id="Headers"><a href="#Headers" class="headerlink" title="Headers"></a>Headers</h4><hr>
<p>There are two header styles, <strong>Setext</strong> and <strong>Atx</strong>.<br>Setext headers are marked by underlining, equal signs for first-levek headers and dashes for second-level headers.</p>
<pre><code>H1
==

H2
--
</code></pre><h1 id="H1"><a href="#H1" class="headerlink" title="H1"></a>H1</h1><h2 id="H2"><a href="#H2" class="headerlink" title="H2"></a>H2</h2><p>Atx headers are marked with 1-6 hash characters, corresponding to header levels 1-6.</p>
<pre><code># H1
## H2
### H3
#### H4
##### H5
###### H6
</code></pre><h1 id="H1-1"><a href="#H1-1" class="headerlink" title="H1"></a>H1</h1><h2 id="H2-1"><a href="#H2-1" class="headerlink" title="H2"></a>H2</h2><h3 id="H3"><a href="#H3" class="headerlink" title="H3"></a>H3</h3><h4 id="H4"><a href="#H4" class="headerlink" title="H4"></a>H4</h4><h5 id="H5"><a href="#H5" class="headerlink" title="H5"></a>H5</h5><h6 id="H6"><a href="#H6" class="headerlink" title="H6"></a>H6</h6><h4 id="Blockquotes"><a href="#Blockquotes" class="headerlink" title="Blockquotes"></a>Blockquotes</h4><hr>
<p>Blockquotes are similar to quoting passages in an email message. Blockquotes are marked with <code>&gt;</code>. You can mark every line of the blockquote or just the first line. Blockquotes can also be nested. Markdown syntax in a blockquote is allowed.</p>
<pre><code>&gt; This is the first level of the quote. 
As you can see, only the first line needs to be marked with a `&gt;`.
&gt;&gt; Blockquotes can also be nested. 
This is the second level of the quote.
</code></pre><blockquote>
<p>This is the first level of the quote.<br>As you can see, only the first line needs to be marked with a <code>&gt;</code>.</p>
<blockquote>
<p>Blockquotes can also be nested.<br>This is the second level of the quote.</p>
</blockquote>
</blockquote>
<h4 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h4><hr>
<p>Markdown supports ordered lists, marked with a number following a dot, and unordered lists, marked with a <code>*</code>, <code>+</code> or <code>-</code>. Lists can also be nested with mixed types.</p>
<pre><code>- item 1 
- item 2
    1. item 2.1
    2. item 2.2
- item 3
</code></pre><ul>
<li>item 1 </li>
<li>item 2<ol>
<li>item 2.1</li>
<li>item 2.2</li>
</ol>
</li>
<li>item 3  </li>
</ul>
<h4 id="Code-blocks"><a href="#Code-blocks" class="headerlink" title="Code blocks"></a>Code blocks</h4><hr>
<p>A code block is simply marked with 1 tab or 4 spaces.</p>
<pre><code>This is a code block
</code></pre><h4 id="Horizontal-rules"><a href="#Horizontal-rules" class="headerlink" title="Horizontal rules"></a>Horizontal rules</h4><hr>
<p>Horizontal rules are marked with 3 or more <code>*</code> or <code>-</code>, possibly separated by spaces.</p>
<pre><code>-----
* * *
</code></pre><hr>
<hr>
<h3 id="Span-Elements"><a href="#Span-Elements" class="headerlink" title="Span Elements"></a>Span Elements</h3><hr>
<h4 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h4><hr>
<p>There are 2 types of links in markdown, inline links and reference-style links. In both styles, the link text is marked by square brackets and the title attribute is optional. There are two types of paths for each style of links. Absolute paths refering to global resources or relative paths refering to local resources on the same server.</p>
<pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.
[This inline link](http://example.net/) has no title attribute.
[This inline link](/archive/) referes to a local resource.
</code></pre><p>This is <a href="http://example.com/" title="Title" target="_blank" rel="external">an example</a> inline link.<br><a href="http://example.net/" target="_blank" rel="external">This inline link</a> has no title attribute.<br><a href="/archives/">This inline link</a> referes to a local resource.</p>
<pre><code>This is [an example][id] reference-style link.
[id]: http://example.com/  &quot;Optional Title Here&quot;
</code></pre><p>This is <a href="http://example.com/" title="Optional Title Here" target="_blank" rel="external">an example</a> reference-style link.</p>
<h4 id="Emphasis"><a href="#Emphasis" class="headerlink" title="Emphasis"></a>Emphasis</h4><hr>
<p>Emphasis is marked by asterisks <code>*</code> or underscores <code>_</code>. One <code>*</code>  or <code>_</code> marks italic text and two <code>*</code>‘s  or <code>_</code>‘s mark bold text.</p>
<pre><code>*single asterisks*
_single underscores_
**double asterisks**
__double underscores__
</code></pre><p><em>single asterisks</em><br><em>single underscores</em><br><strong>double asterisks</strong><br><strong>double underscores</strong></p>
<h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><hr>
<p>To indicate a span of code, mark it with backtick quotes.</p>
<pre><code>`print()`
</code></pre><p><code>print()</code></p>
<h4 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h4><hr>
<p>Images are marked exactly the same as <a href="#Links">links</a>, but with an exclamation mark <code>!</code> in front.</p>
<pre><code>![Markdown](https://leantesting.com/wp-content/uploads/2016/04/Markdown-mark.svg_.png) 
</code></pre><p><img src="https://leantesting.com/wp-content/uploads/2016/04/Markdown-mark.svg_.png" alt="Markdown"> </p>
<h3 id="Backslash-Escapes"><a href="#Backslash-Escapes" class="headerlink" title="Backslash Escapes"></a>Backslash Escapes</h3><hr>
<p>Markdown provides backslash escapes for the following characters:</p>
<pre><code>\   backslash
`   backtick
*   asterisk
_   underscore
{}  curly braces
[]  square brackets
()  parentheses
#   hash mark
+   plus sign
-   minus sign (hyphen)
.   dot
!   exclamation mark
</code></pre><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><hr>
<p>Markdown is widely accepted by developers and editors, so it’s the best choice for implementing best practice. Nearly every popular content management solution supports Markdown, if not out-of-the-box, then with an easy-to-install extension.</p>
<h3 id="Markdown-for-Sublime-Text"><a href="#Markdown-for-Sublime-Text" class="headerlink" title="Markdown for Sublime Text"></a>Markdown for Sublime Text</h3><hr>
<p><strong>Sublime text 2/3</strong> can preview and build markdown files quickly in your web browser with the <a href="https://packagecontrol.io/packages/Markdown%20Preview" target="_blank" rel="external">Markdown Preview</a> package. To install this package, follow the following steps:</p>
<ol>
<li><a href="https://packagecontrol.io/installation" target="_blank" rel="external">Install</a> Package Control if you haven’t yet.</li>
<li>Use <kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>P</kbd> then Package Control: Install Package</li>
<li>Look for <strong>Markdown Preview</strong> and install it.</li>
</ol>
<h3 id="Markdown-for-Atom"><a href="#Markdown-for-Atom" class="headerlink" title="Markdown for Atom"></a>Markdown for Atom</h3><hr>
<p><strong>Atom</strong> has the package <a href="https://atom.io/packages/markdown-preview-plus" target="_blank" rel="external">Markdown Preview Plus (MPP)</a>, which can preview any markdown file with <kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>m</kbd> in Atom itself. To install MMP follow the following steps:</p>
<ol>
<li>Search for and install markdown-preview-plus in Atom’s Settings view.</li>
<li>Search for and disable the built-in package markdown-preview.</li>
<li>(Optional) Install and enable Pandoc for citation support.</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Markdown is &lt;em&gt;mostly&lt;/em&gt;  used as a &lt;strong&gt;text-to-HTML conversion tool&lt;/strong&gt; for web writers. After writing using &lt;strong&gt;plain text format&lt;/strong&gt;, your markdown document can be converted to structurally valid XHTML (or HTML). For instance, github uses markdown to preview read me’s. Also the posts on this blog are written in markdown.&lt;/p&gt;
    
    </summary>
    
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
  </entry>
  
</feed>
